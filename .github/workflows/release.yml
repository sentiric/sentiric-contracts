# .github/workflows/release.yml

name: Release Contracts

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Generate, Commit, and Publish Packages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 

      - name: Get tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1.35.1

      - name: Generate all language stubs
        run: buf generate

      # ... Commit ve Push adımları aynı kalıyor ...
      - name: Configure Git user for bot
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions-bot@users.noreply.github.com"
      - name: Commit generated code
        run: |
          git add -f gen/
          if ! git diff --staged --quiet; then
            git commit -m "feat(gen): Generate code for v${{ env.VERSION }}"
          else
            echo "No changes in generated code to commit."
          fi
      - name: Push changes and update tag
        run: |
          if git log -1 --pretty=%B | grep -q "Generate code for v${{ env.VERSION }}"; then
            echo "Rebasing onto main and pushing generated code..."
            git pull origin main --rebase
            git push origin HEAD:main
            TAG_NAME="v${{ env.VERSION }}"
            git tag -f $TAG_NAME
            git push -f origin refs/tags/$TAG_NAME
          else
            echo "No new commit to push. Tag is up to date."
          fi

      # --- Node.js Paketi (Değişiklik yok) ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@sentiric'
      - name: Update package.json version and publish
        run: |
          npm version ${{ env.VERSION }} --no-git-tag-version --allow-same-version
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- Python Paketi (GÜNCELLENMİŞ VE SAĞLAMLAŞTIRILMIŞ) ---
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python build dependencies
        run: python -m pip install --upgrade build twine

      - name: Update setup.py version
        run: |
          sed -i "s/version=\"[0-9.]*\"/version=\"${{ env.VERSION }}\"/" setup.py
          echo "Updated setup.py version to ${{ env.VERSION }}"
      
      - name: Build Python package
        run: python -m build

      - name: Publish Python package to GitHub Packages
        run: |
          echo "--- Publishing to URL: https://pypi.pkg.github.com/${{ github.repository_owner }} ---"
          echo "--- Files to be uploaded: ---"
          ls -la dist/
          twine upload --verbose --repository-url https://pypi.pkg.github.com/${{ github.repository_owner }} dist/*
        env:
          # Önemli: GitHub Packages için username __token__ olmalıdır.
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}