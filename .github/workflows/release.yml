# .github/workflows/release.yml
name: Release Contracts

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Generate Code & Release
    runs-on: ubuntu-latest
    # GITHUB_TOKEN'a paket yazma izni veriyoruz
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Tag Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1.35.1

      - name: Generate Code
        run: buf generate

      # --- GO: Hiçbir yayınlama adımı gerekmez, tag yeterlidir ---
      - name: Announce Go Module
        run: echo "✅ Go module is available via git tag v${{ env.VERSION }}"

      # --- RUST: Hiçbir yayınlama adımı gerekmez, tag yeterlidir ---
      - name: Announce Rust Crate
        run: echo "✅ Rust crate is available via git tag v${{ env.VERSION }}"

      # --- PYTHON: Hiçbir yayınlama adımı gerekmez, tag yeterlidir ---
      - name: Announce Python Package
        run: echo "✅ Python package is available via git tag v${{ env.VERSION }}"

      # --- NODE.JS: GitHub Packages'a yayınla ---
      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@sentiric' # Organizasyonunuzun adı

      - name: Publish to GitHub Packages (Node.js)
        run: |
          cd gen/nodejs
          # package.json versiyonunu tag ile güncelle
          npm version ${{ env.VERSION }} --no-git-tag-version --allow-same-version
          # Yayınla!
          npm publish
        env:
          # GITHUB_TOKEN otomatik olarak setup-node tarafından .npmrc'ye yazılır
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}