// ========== FILE: sentiric-contracts/proto/sentiric/user/v1/user.proto ==========
syntax = "proto3";

package sentiric.user.v1;

import "google/api/annotations.proto";

option go_package = "github.com/sentiric/sentiric-contracts/gen/go/sentiric/user/v1;userv1";

message Contact {
  int32 id = 1;
  string user_id = 2;
  string contact_type = 3;
  string contact_value = 4;
  bool is_primary = 5;
}

message User {
  string id = 1;
  optional string name = 2;
  string tenant_id = 3;
  string user_type = 4;
  repeated Contact contacts = 5; 
}

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/by-id/{user_id}"
    };
  }

  rpc FindUserByContact(FindUserByContactRequest) returns (FindUserByContactResponse) {
     option (google.api.http) = {
      get: "/v1/users/by-contact/{contact_type}/{contact_value}"
    };
  }
  
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  User user = 1;
}

message FindUserByContactRequest {
  string contact_type = 1;
  string contact_value = 2;
}

// YENİ RESPONSE MESAJI: FindUserByContact için özel yanıt.
// GetUserResponse ile aynı içeriğe sahip olsa bile, ayrı bir tip olması önemlidir.
message FindUserByContactResponse {
  User user = 1;
}

message CreateUserRequest {
  string tenant_id = 1;
  string user_type = 2;
  optional string name = 3;
  message InitialContact {
    string contact_type = 1;
    string contact_value = 2;
  }
  InitialContact initial_contact = 4;
}

message CreateUserResponse {
  User user = 1;
}