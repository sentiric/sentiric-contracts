// @generated
// This file is @generated by prost-build.
/// QueryRequest, bir bilgi tabanı sorgusunun parametrelerini içerir.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryRequest {
    /// Sorgunun ait olduğu tenant'ın kimliği.
    #[prost(string, tag="1")]
    pub tenant_id: ::prost::alloc::string::String,
    /// Kullanıcının veya sistemin aradığı metin sorgusu.
    #[prost(string, tag="2")]
    pub query: ::prost::alloc::string::String,
    /// Döndürülecek en iyi sonuçların sayısı.
    #[prost(int32, tag="3")]
    pub top_k: i32,
}
/// QueryResponse, bir sorgunun sonuçlarını içerir.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryResponse {
    /// Sorguyla en alakalı bulunan sonuçların listesi.
    #[prost(message, repeated, tag="1")]
    pub results: ::prost::alloc::vec::Vec<QueryResult>,
}
/// QueryResult, bilgi tabanından dönen tek bir sonucu temsil eder.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryResult {
    /// Bulunan metin parçasının içeriği.
    #[prost(string, tag="1")]
    pub content: ::prost::alloc::string::String,
    /// Sonucun sorguyla olan alaka düzeyi skoru (örn: 0.0 ile 1.0 arası).
    #[prost(float, tag="2")]
    pub score: f32,
    /// Bilginin kaynağını belirten bir tanımlayıcı (örn: "FAQ.pdf", "product_docs/page-15").
    #[prost(string, tag="3")]
    pub source: ::prost::alloc::string::String,
    /// Kaynakla ilgili ek meta veriler (örn: "category": "billing").
    #[prost(map="string, string", tag="4")]
    pub metadata: ::std::collections::HashMap<::prost::alloc::string::String, ::prost::alloc::string::String>,
}
include!("sentiric.knowledge.v1.tonic.rs");
// @@protoc_insertion_point(module)