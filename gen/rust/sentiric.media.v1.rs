// @generated
// This file is @generated by prost-build.
/// ... (Mevcut mesajlar aynı kalır) ...
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AllocatePortRequest {
    #[prost(string, tag="1")]
    pub call_id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AllocatePortResponse {
    #[prost(uint32, tag="1")]
    pub rtp_port: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ReleasePortRequest {
    #[prost(uint32, tag="1")]
    pub rtp_port: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ReleasePortResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayAudioRequest {
    #[prost(string, tag="1")]
    pub rtp_target_addr: ::prost::alloc::string::String,
    #[prost(uint32, tag="2")]
    pub server_rtp_port: u32,
    #[prost(string, tag="3")]
    pub audio_uri: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayAudioResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
    #[prost(string, tag="2")]
    pub message: ::prost::alloc::string::String,
}
/// --- YENİ MESAJLAR ---
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RecordAudioRequest {
    /// Hangi çağrı oturumunun kaydedileceğini belirtir.
    #[prost(uint32, tag="1")]
    pub server_rtp_port: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AudioChunk {
    /// Ham ses verisi (PCMU/G.711 formatında).
    #[prost(bytes="vec", tag="1")]
    pub audio_data: ::prost::alloc::vec::Vec<u8>,
}
include!("sentiric.media.v1.tonic.rs");
// @@protoc_insertion_point(module)