// @generated
// This file is @generated by prost-build.
/// ESKİ: CallContext
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StartDialogRequest {
    #[prost(message, optional, tag="1")]
    pub context: ::core::option::Option<super::super::data::v1::CallContext>,
}
/// ESKİ: DialogResponse (Tekrar Kullanım Çözümü)
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StartDialogResponse {
    #[prost(string, tag="1")]
    pub response_text: ::prost::alloc::string::String,
    #[prost(string, optional, tag="2")]
    pub audio_uri: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, tag="3")]
    pub next_action: ::prost::alloc::string::String,
    #[prost(message, optional, tag="4")]
    pub updated_context: ::core::option::Option<super::super::data::v1::CallContext>,
}
/// ESKİ: UserInput
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProcessUserInputRequest {
    #[prost(string, tag="1")]
    pub call_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub text: ::prost::alloc::string::String,
    #[prost(bytes="vec", optional, tag="3")]
    pub audio_data: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
}
/// ESKİ: DialogResponse (Tekrar Kullanım Çözümü)
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProcessUserInputResponse {
    #[prost(string, tag="1")]
    pub response_text: ::prost::alloc::string::String,
    #[prost(string, optional, tag="2")]
    pub audio_uri: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, tag="3")]
    pub next_action: ::prost::alloc::string::String,
    #[prost(message, optional, tag="4")]
    pub updated_context: ::core::option::Option<super::super::data::v1::CallContext>,
}
include!("sentiric.dialog.v1.tonic.rs");
// @@protoc_insertion_point(module)