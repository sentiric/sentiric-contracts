// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResolveDialplanRequest {
    #[prost(string, tag="1")]
    pub caller_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub destination_number: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DialplanAction {
    /// Örn: "PLAY_ANNOUNCEMENT", "START_AI_CONVERSATION"
    #[prost(string, tag="1")]
    pub action: ::prost::alloc::string::String,
    /// Action parametrelerini esnek bir şekilde tutmak için Struct kullanıyoruz.
    #[prost(message, optional, tag="2")]
    pub action_data: ::core::option::Option<::prost_types::Struct>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResolveDialplanResponse {
    #[prost(string, tag="1")]
    pub dialplan_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub tenant_id: ::prost::alloc::string::String,
    #[prost(message, optional, tag="3")]
    pub action: ::core::option::Option<DialplanAction>,
    /// Çağrı bir kullanıcıyla eşleştiyse, o kullanıcı bilgisini de dönelim.
    #[prost(message, optional, tag="4")]
    pub matched_user: ::core::option::Option<super::super::user::v1::User>,
}
include!("sentiric.dialplan.v1.tonic.rs");
// @@protoc_insertion_point(module)