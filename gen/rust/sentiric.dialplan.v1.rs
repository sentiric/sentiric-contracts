// @generated
// This file is @generated by prost-build.
// =================================================================
//                         CORE MESSAGES
// =================================================================

#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResolveDialplanRequest {
    /// Arayanın telefon numarası vb.
    #[prost(string, tag="1")]
    pub caller_contact_value: ::prost::alloc::string::String,
    /// Aranan hat numarası
    #[prost(string, tag="2")]
    pub destination_number: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ResolveDialplanResponse {
    #[prost(string, tag="1")]
    pub dialplan_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub tenant_id: ::prost::alloc::string::String,
    #[prost(message, optional, tag="3")]
    pub action: ::core::option::Option<DialplanAction>,
    #[prost(message, optional, tag="4")]
    pub matched_user: ::core::option::Option<super::super::user::v1::User>,
    #[prost(message, optional, tag="5")]
    pub matched_contact: ::core::option::Option<super::super::user::v1::Contact>,
    #[prost(message, optional, tag="6")]
    pub inbound_route: ::core::option::Option<InboundRoute>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InboundRoute {
    #[prost(string, tag="1")]
    pub phone_number: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub tenant_id: ::prost::alloc::string::String,
    #[prost(string, optional, tag="3")]
    pub active_dialplan_id: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag="4")]
    pub off_hours_dialplan_id: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag="5")]
    pub failsafe_dialplan_id: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(bool, tag="6")]
    pub is_maintenance_mode: bool,
    #[prost(string, tag="7")]
    pub default_language_code: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Dialplan {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub tenant_id: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub description: ::prost::alloc::string::String,
    #[prost(message, optional, tag="4")]
    pub action: ::core::option::Option<DialplanAction>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DialplanAction {
    #[prost(string, tag="1")]
    pub action: ::prost::alloc::string::String,
    #[prost(message, optional, tag="2")]
    pub action_data: ::core::option::Option<ActionData>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActionData {
    #[prost(map="string, string", tag="1")]
    pub data: ::std::collections::HashMap<::prost::alloc::string::String, ::prost::alloc::string::String>,
}
// =================================================================
//                   INBOUND ROUTE MANAGEMENT MESSAGES
// =================================================================

#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateInboundRouteRequest {
    #[prost(message, optional, tag="1")]
    pub route: ::core::option::Option<InboundRoute>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetInboundRouteRequest {
    #[prost(string, tag="1")]
    pub phone_number: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateInboundRouteRequest {
    #[prost(message, optional, tag="1")]
    pub route: ::core::option::Option<InboundRoute>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteInboundRouteRequest {
    #[prost(string, tag="1")]
    pub phone_number: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DeleteInboundRouteResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListInboundRoutesRequest {
    /// Opsiyonel filtre
    #[prost(string, tag="1")]
    pub tenant_id: ::prost::alloc::string::String,
    #[prost(int32, tag="2")]
    pub page_size: i32,
    #[prost(int32, tag="3")]
    pub page: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListInboundRoutesResponse {
    #[prost(message, repeated, tag="1")]
    pub routes: ::prost::alloc::vec::Vec<InboundRoute>,
    #[prost(int32, tag="2")]
    pub total_count: i32,
}
// =================================================================
//                     DIALPLAN MANAGEMENT MESSAGES
// =================================================================

#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateDialplanRequest {
    #[prost(message, optional, tag="1")]
    pub dialplan: ::core::option::Option<Dialplan>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetDialplanRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateDialplanRequest {
    #[prost(message, optional, tag="1")]
    pub dialplan: ::core::option::Option<Dialplan>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeleteDialplanRequest {
    #[prost(string, tag="1")]
    pub id: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DeleteDialplanResponse {
    #[prost(bool, tag="1")]
    pub success: bool,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListDialplansRequest {
    /// Opsiyonel filtre
    #[prost(string, tag="1")]
    pub tenant_id: ::prost::alloc::string::String,
    #[prost(int32, tag="2")]
    pub page_size: i32,
    #[prost(int32, tag="3")]
    pub page: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ListDialplansResponse {
    #[prost(message, repeated, tag="1")]
    pub dialplans: ::prost::alloc::vec::Vec<Dialplan>,
    #[prost(int32, tag="2")]
    pub total_count: i32,
}
include!("sentiric.dialplan.v1.tonic.rs");
// @@protoc_insertion_point(module)