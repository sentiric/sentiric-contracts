// source: sentiric/agent/v1/orchestration.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = globalThis;

var sentiric_data_v1_context_pb = require('../../../sentiric/data/v1/context_pb.js');
goog.object.extend(proto, sentiric_data_v1_context_pb);
goog.exportSymbol('proto.sentiric.agent.v1.ProcessCallStartRequest', null, global);
goog.exportSymbol('proto.sentiric.agent.v1.ProcessCallStartResponse', null, global);
goog.exportSymbol('proto.sentiric.agent.v1.ProcessSagaStepRequest', null, global);
goog.exportSymbol('proto.sentiric.agent.v1.ProcessSagaStepResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sentiric.agent.v1.ProcessCallStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sentiric.agent.v1.ProcessCallStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sentiric.agent.v1.ProcessCallStartRequest.displayName = 'proto.sentiric.agent.v1.ProcessCallStartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sentiric.agent.v1.ProcessCallStartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sentiric.agent.v1.ProcessCallStartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sentiric.agent.v1.ProcessCallStartResponse.displayName = 'proto.sentiric.agent.v1.ProcessCallStartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sentiric.agent.v1.ProcessSagaStepRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sentiric.agent.v1.ProcessSagaStepRequest.displayName = 'proto.sentiric.agent.v1.ProcessSagaStepRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sentiric.agent.v1.ProcessSagaStepResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sentiric.agent.v1.ProcessSagaStepResponse.displayName = 'proto.sentiric.agent.v1.ProcessSagaStepResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sentiric.agent.v1.ProcessCallStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sentiric.agent.v1.ProcessCallStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
callId: jspb.Message.getFieldWithDefault(msg, 1, ""),
dialplanId: jspb.Message.getFieldWithDefault(msg, 2, ""),
callerNumber: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sentiric.agent.v1.ProcessCallStartRequest}
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sentiric.agent.v1.ProcessCallStartRequest;
  return proto.sentiric.agent.v1.ProcessCallStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sentiric.agent.v1.ProcessCallStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sentiric.agent.v1.ProcessCallStartRequest}
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setCallId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setDialplanId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setCallerNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sentiric.agent.v1.ProcessCallStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sentiric.agent.v1.ProcessCallStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDialplanId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCallerNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string call_id = 1;
 * @return {string}
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.getCallId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sentiric.agent.v1.ProcessCallStartRequest} returns this
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.setCallId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dialplan_id = 2;
 * @return {string}
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.getDialplanId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sentiric.agent.v1.ProcessCallStartRequest} returns this
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.setDialplanId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string caller_number = 3;
 * @return {string}
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.getCallerNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sentiric.agent.v1.ProcessCallStartRequest} returns this
 */
proto.sentiric.agent.v1.ProcessCallStartRequest.prototype.setCallerNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sentiric.agent.v1.ProcessCallStartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sentiric.agent.v1.ProcessCallStartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
initiated: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sentiric.agent.v1.ProcessCallStartResponse}
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sentiric.agent.v1.ProcessCallStartResponse;
  return proto.sentiric.agent.v1.ProcessCallStartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sentiric.agent.v1.ProcessCallStartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sentiric.agent.v1.ProcessCallStartResponse}
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitiated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sentiric.agent.v1.ProcessCallStartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sentiric.agent.v1.ProcessCallStartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInitiated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool initiated = 1;
 * @return {boolean}
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.prototype.getInitiated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sentiric.agent.v1.ProcessCallStartResponse} returns this
 */
proto.sentiric.agent.v1.ProcessCallStartResponse.prototype.setInitiated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sentiric.agent.v1.ProcessSagaStepRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sentiric.agent.v1.ProcessSagaStepRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
sagaId: jspb.Message.getFieldWithDefault(msg, 1, ""),
stepName: jspb.Message.getFieldWithDefault(msg, 2, ""),
context: (f = msg.getContext()) && sentiric_data_v1_context_pb.CallContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepRequest}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sentiric.agent.v1.ProcessSagaStepRequest;
  return proto.sentiric.agent.v1.ProcessSagaStepRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sentiric.agent.v1.ProcessSagaStepRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepRequest}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setSagaId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setStepName(value);
      break;
    case 3:
      var value = new sentiric_data_v1_context_pb.CallContext;
      reader.readMessage(value,sentiric_data_v1_context_pb.CallContext.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sentiric.agent.v1.ProcessSagaStepRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sentiric.agent.v1.ProcessSagaStepRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSagaId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStepName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sentiric_data_v1_context_pb.CallContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional string saga_id = 1;
 * @return {string}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.getSagaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepRequest} returns this
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.setSagaId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string step_name = 2;
 * @return {string}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.getStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepRequest} returns this
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.setStepName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional sentiric.data.v1.CallContext context = 3;
 * @return {?proto.sentiric.data.v1.CallContext}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.getContext = function() {
  return /** @type{?proto.sentiric.data.v1.CallContext} */ (
    jspb.Message.getWrapperField(this, sentiric_data_v1_context_pb.CallContext, 3));
};


/**
 * @param {?proto.sentiric.data.v1.CallContext|undefined} value
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepRequest} returns this
*/
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepRequest} returns this
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sentiric.agent.v1.ProcessSagaStepRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sentiric.agent.v1.ProcessSagaStepResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sentiric.agent.v1.ProcessSagaStepResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
completed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepResponse}
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sentiric.agent.v1.ProcessSagaStepResponse;
  return proto.sentiric.agent.v1.ProcessSagaStepResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sentiric.agent.v1.ProcessSagaStepResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepResponse}
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sentiric.agent.v1.ProcessSagaStepResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sentiric.agent.v1.ProcessSagaStepResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompleted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool completed = 1;
 * @return {boolean}
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.prototype.getCompleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sentiric.agent.v1.ProcessSagaStepResponse} returns this
 */
proto.sentiric.agent.v1.ProcessSagaStepResponse.prototype.setCompleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.sentiric.agent.v1);
