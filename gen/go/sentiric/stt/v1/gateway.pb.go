// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: sentiric/stt/v1/gateway.proto

package sttv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TranscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioContent  []byte                 `protobuf:"bytes,1,opt,name=audio_content,json=audioContent,proto3" json:"audio_content,omitempty"`
	LanguageCode  string                 `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeRequest) Reset() {
	*x = TranscribeRequest{}
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeRequest) ProtoMessage() {}

func (x *TranscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeRequest.ProtoReflect.Descriptor instead.
func (*TranscribeRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_stt_v1_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *TranscribeRequest) GetAudioContent() []byte {
	if x != nil {
		return x.AudioContent
	}
	return nil
}

func (x *TranscribeRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type TranscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transcription string                 `protobuf:"bytes,1,opt,name=transcription,proto3" json:"transcription,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeResponse) Reset() {
	*x = TranscribeResponse{}
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeResponse) ProtoMessage() {}

func (x *TranscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeResponse.ProtoReflect.Descriptor instead.
func (*TranscribeResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_stt_v1_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *TranscribeResponse) GetTranscription() string {
	if x != nil {
		return x.Transcription
	}
	return ""
}

type TranscribeStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioChunk    []byte                 `protobuf:"bytes,1,opt,name=audio_chunk,json=audioChunk,proto3" json:"audio_chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeStreamRequest) Reset() {
	*x = TranscribeStreamRequest{}
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeStreamRequest) ProtoMessage() {}

func (x *TranscribeStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeStreamRequest.ProtoReflect.Descriptor instead.
func (*TranscribeStreamRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_stt_v1_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *TranscribeStreamRequest) GetAudioChunk() []byte {
	if x != nil {
		return x.AudioChunk
	}
	return nil
}

type TranscribeStreamResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	PartialTranscription string                 `protobuf:"bytes,1,opt,name=partial_transcription,json=partialTranscription,proto3" json:"partial_transcription,omitempty"`
	IsFinal              bool                   `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TranscribeStreamResponse) Reset() {
	*x = TranscribeStreamResponse{}
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeStreamResponse) ProtoMessage() {}

func (x *TranscribeStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_stt_v1_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeStreamResponse.ProtoReflect.Descriptor instead.
func (*TranscribeStreamResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_stt_v1_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *TranscribeStreamResponse) GetPartialTranscription() string {
	if x != nil {
		return x.PartialTranscription
	}
	return ""
}

func (x *TranscribeStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

var File_sentiric_stt_v1_gateway_proto protoreflect.FileDescriptor

const file_sentiric_stt_v1_gateway_proto_rawDesc = "" +
	"\n" +
	"\x1dsentiric/stt/v1/gateway.proto\x12\x0fsentiric.stt.v1\"]\n" +
	"\x11TranscribeRequest\x12#\n" +
	"\raudio_content\x18\x01 \x01(\fR\faudioContent\x12#\n" +
	"\rlanguage_code\x18\x02 \x01(\tR\flanguageCode\":\n" +
	"\x12TranscribeResponse\x12$\n" +
	"\rtranscription\x18\x01 \x01(\tR\rtranscription\":\n" +
	"\x17TranscribeStreamRequest\x12\x1f\n" +
	"\vaudio_chunk\x18\x01 \x01(\fR\n" +
	"audioChunk\"j\n" +
	"\x18TranscribeStreamResponse\x123\n" +
	"\x15partial_transcription\x18\x01 \x01(\tR\x14partialTranscription\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal2\xd7\x01\n" +
	"\x11SttGatewayService\x12U\n" +
	"\n" +
	"Transcribe\x12\".sentiric.stt.v1.TranscribeRequest\x1a#.sentiric.stt.v1.TranscribeResponse\x12k\n" +
	"\x10TranscribeStream\x12(.sentiric.stt.v1.TranscribeStreamRequest\x1a).sentiric.stt.v1.TranscribeStreamResponse(\x010\x01BEZCgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/stt/v1;sttv1b\x06proto3"

var (
	file_sentiric_stt_v1_gateway_proto_rawDescOnce sync.Once
	file_sentiric_stt_v1_gateway_proto_rawDescData []byte
)

func file_sentiric_stt_v1_gateway_proto_rawDescGZIP() []byte {
	file_sentiric_stt_v1_gateway_proto_rawDescOnce.Do(func() {
		file_sentiric_stt_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_stt_v1_gateway_proto_rawDesc), len(file_sentiric_stt_v1_gateway_proto_rawDesc)))
	})
	return file_sentiric_stt_v1_gateway_proto_rawDescData
}

var file_sentiric_stt_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sentiric_stt_v1_gateway_proto_goTypes = []any{
	(*TranscribeRequest)(nil),        // 0: sentiric.stt.v1.TranscribeRequest
	(*TranscribeResponse)(nil),       // 1: sentiric.stt.v1.TranscribeResponse
	(*TranscribeStreamRequest)(nil),  // 2: sentiric.stt.v1.TranscribeStreamRequest
	(*TranscribeStreamResponse)(nil), // 3: sentiric.stt.v1.TranscribeStreamResponse
}
var file_sentiric_stt_v1_gateway_proto_depIdxs = []int32{
	0, // 0: sentiric.stt.v1.SttGatewayService.Transcribe:input_type -> sentiric.stt.v1.TranscribeRequest
	2, // 1: sentiric.stt.v1.SttGatewayService.TranscribeStream:input_type -> sentiric.stt.v1.TranscribeStreamRequest
	1, // 2: sentiric.stt.v1.SttGatewayService.Transcribe:output_type -> sentiric.stt.v1.TranscribeResponse
	3, // 3: sentiric.stt.v1.SttGatewayService.TranscribeStream:output_type -> sentiric.stt.v1.TranscribeStreamResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sentiric_stt_v1_gateway_proto_init() }
func file_sentiric_stt_v1_gateway_proto_init() {
	if File_sentiric_stt_v1_gateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_stt_v1_gateway_proto_rawDesc), len(file_sentiric_stt_v1_gateway_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_stt_v1_gateway_proto_goTypes,
		DependencyIndexes: file_sentiric_stt_v1_gateway_proto_depIdxs,
		MessageInfos:      file_sentiric_stt_v1_gateway_proto_msgTypes,
	}.Build()
	File_sentiric_stt_v1_gateway_proto = out.File
	file_sentiric_stt_v1_gateway_proto_goTypes = nil
	file_sentiric_stt_v1_gateway_proto_depIdxs = nil
}
