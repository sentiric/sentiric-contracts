// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: sentiric/control/v1/observability.proto

package controlv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_control_v1_observability_proto_rawDescGZIP(), []int{0}
}

func (x *GetMetricsRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type GetMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       map[string]float64     `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsResponse) Reset() {
	*x = GetMetricsResponse{}
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsResponse) ProtoMessage() {}

func (x *GetMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_control_v1_observability_proto_rawDescGZIP(), []int{1}
}

func (x *GetMetricsResponse) GetMetrics() map[string]float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_control_v1_observability_proto_rawDescGZIP(), []int{2}
}

func (x *GetLogsRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GetLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogEntries    []string               `protobuf:"bytes,1,rep,name=log_entries,json=logEntries,proto3" json:"log_entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsResponse) Reset() {
	*x = GetLogsResponse{}
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsResponse) ProtoMessage() {}

func (x *GetLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_control_v1_observability_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsResponse.ProtoReflect.Descriptor instead.
func (*GetLogsResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_control_v1_observability_proto_rawDescGZIP(), []int{3}
}

func (x *GetLogsResponse) GetLogEntries() []string {
	if x != nil {
		return x.LogEntries
	}
	return nil
}

var File_sentiric_control_v1_observability_proto protoreflect.FileDescriptor

const file_sentiric_control_v1_observability_proto_rawDesc = "" +
	"\n" +
	"'sentiric/control/v1/observability.proto\x12\x13sentiric.control.v1\"6\n" +
	"\x11GetMetricsRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\"\xa0\x01\n" +
	"\x12GetMetricsResponse\x12N\n" +
	"\ametrics\x18\x01 \x03(\v24.sentiric.control.v1.GetMetricsResponse.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"I\n" +
	"\x0eGetLogsRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"2\n" +
	"\x0fGetLogsResponse\x12\x1f\n" +
	"\vlog_entries\x18\x01 \x03(\tR\n" +
	"logEntries2\xcb\x01\n" +
	"\x14ObservabilityService\x12]\n" +
	"\n" +
	"GetMetrics\x12&.sentiric.control.v1.GetMetricsRequest\x1a'.sentiric.control.v1.GetMetricsResponse\x12T\n" +
	"\aGetLogs\x12#.sentiric.control.v1.GetLogsRequest\x1a$.sentiric.control.v1.GetLogsResponseBMZKgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/control/v1;controlv1b\x06proto3"

var (
	file_sentiric_control_v1_observability_proto_rawDescOnce sync.Once
	file_sentiric_control_v1_observability_proto_rawDescData []byte
)

func file_sentiric_control_v1_observability_proto_rawDescGZIP() []byte {
	file_sentiric_control_v1_observability_proto_rawDescOnce.Do(func() {
		file_sentiric_control_v1_observability_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_control_v1_observability_proto_rawDesc), len(file_sentiric_control_v1_observability_proto_rawDesc)))
	})
	return file_sentiric_control_v1_observability_proto_rawDescData
}

var file_sentiric_control_v1_observability_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sentiric_control_v1_observability_proto_goTypes = []any{
	(*GetMetricsRequest)(nil),  // 0: sentiric.control.v1.GetMetricsRequest
	(*GetMetricsResponse)(nil), // 1: sentiric.control.v1.GetMetricsResponse
	(*GetLogsRequest)(nil),     // 2: sentiric.control.v1.GetLogsRequest
	(*GetLogsResponse)(nil),    // 3: sentiric.control.v1.GetLogsResponse
	nil,                        // 4: sentiric.control.v1.GetMetricsResponse.MetricsEntry
}
var file_sentiric_control_v1_observability_proto_depIdxs = []int32{
	4, // 0: sentiric.control.v1.GetMetricsResponse.metrics:type_name -> sentiric.control.v1.GetMetricsResponse.MetricsEntry
	0, // 1: sentiric.control.v1.ObservabilityService.GetMetrics:input_type -> sentiric.control.v1.GetMetricsRequest
	2, // 2: sentiric.control.v1.ObservabilityService.GetLogs:input_type -> sentiric.control.v1.GetLogsRequest
	1, // 3: sentiric.control.v1.ObservabilityService.GetMetrics:output_type -> sentiric.control.v1.GetMetricsResponse
	3, // 4: sentiric.control.v1.ObservabilityService.GetLogs:output_type -> sentiric.control.v1.GetLogsResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sentiric_control_v1_observability_proto_init() }
func file_sentiric_control_v1_observability_proto_init() {
	if File_sentiric_control_v1_observability_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_control_v1_observability_proto_rawDesc), len(file_sentiric_control_v1_observability_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_control_v1_observability_proto_goTypes,
		DependencyIndexes: file_sentiric_control_v1_observability_proto_depIdxs,
		MessageInfos:      file_sentiric_control_v1_observability_proto_msgTypes,
	}.Build()
	File_sentiric_control_v1_observability_proto = out.File
	file_sentiric_control_v1_observability_proto_goTypes = nil
	file_sentiric_control_v1_observability_proto_depIdxs = nil
}
