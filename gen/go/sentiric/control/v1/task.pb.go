// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: sentiric/control/v1/task.proto

package controlv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DispatchTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskType      string                 `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Payload       map[string]string      `protobuf:"bytes,2,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DueDate       *string                `protobuf:"bytes,3,opt,name=due_date,json=dueDate,proto3,oneof" json:"due_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchTaskRequest) Reset() {
	*x = DispatchTaskRequest{}
	mi := &file_sentiric_control_v1_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchTaskRequest) ProtoMessage() {}

func (x *DispatchTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_control_v1_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchTaskRequest.ProtoReflect.Descriptor instead.
func (*DispatchTaskRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_control_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *DispatchTaskRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *DispatchTaskRequest) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *DispatchTaskRequest) GetDueDate() string {
	if x != nil && x.DueDate != nil {
		return *x.DueDate
	}
	return ""
}

type DispatchTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // İsim TaskID'den task_id'ye çevrildi
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchTaskResponse) Reset() {
	*x = DispatchTaskResponse{}
	mi := &file_sentiric_control_v1_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchTaskResponse) ProtoMessage() {}

func (x *DispatchTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_control_v1_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchTaskResponse.ProtoReflect.Descriptor instead.
func (*DispatchTaskResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_control_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *DispatchTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

var File_sentiric_control_v1_task_proto protoreflect.FileDescriptor

const file_sentiric_control_v1_task_proto_rawDesc = "" +
	"\n" +
	"\x1esentiric/control/v1/task.proto\x12\x13sentiric.control.v1\"\xec\x01\n" +
	"\x13DispatchTaskRequest\x12\x1b\n" +
	"\ttask_type\x18\x01 \x01(\tR\btaskType\x12O\n" +
	"\apayload\x18\x02 \x03(\v25.sentiric.control.v1.DispatchTaskRequest.PayloadEntryR\apayload\x12\x1e\n" +
	"\bdue_date\x18\x03 \x01(\tH\x00R\adueDate\x88\x01\x01\x1a:\n" +
	"\fPayloadEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\v\n" +
	"\t_due_date\"/\n" +
	"\x14DispatchTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId2r\n" +
	"\vTaskService\x12c\n" +
	"\fDispatchTask\x12(.sentiric.control.v1.DispatchTaskRequest\x1a).sentiric.control.v1.DispatchTaskResponseBMZKgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/control/v1;controlv1b\x06proto3"

var (
	file_sentiric_control_v1_task_proto_rawDescOnce sync.Once
	file_sentiric_control_v1_task_proto_rawDescData []byte
)

func file_sentiric_control_v1_task_proto_rawDescGZIP() []byte {
	file_sentiric_control_v1_task_proto_rawDescOnce.Do(func() {
		file_sentiric_control_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_control_v1_task_proto_rawDesc), len(file_sentiric_control_v1_task_proto_rawDesc)))
	})
	return file_sentiric_control_v1_task_proto_rawDescData
}

var file_sentiric_control_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sentiric_control_v1_task_proto_goTypes = []any{
	(*DispatchTaskRequest)(nil),  // 0: sentiric.control.v1.DispatchTaskRequest
	(*DispatchTaskResponse)(nil), // 1: sentiric.control.v1.DispatchTaskResponse
	nil,                          // 2: sentiric.control.v1.DispatchTaskRequest.PayloadEntry
}
var file_sentiric_control_v1_task_proto_depIdxs = []int32{
	2, // 0: sentiric.control.v1.DispatchTaskRequest.payload:type_name -> sentiric.control.v1.DispatchTaskRequest.PayloadEntry
	0, // 1: sentiric.control.v1.TaskService.DispatchTask:input_type -> sentiric.control.v1.DispatchTaskRequest
	1, // 2: sentiric.control.v1.TaskService.DispatchTask:output_type -> sentiric.control.v1.DispatchTaskResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sentiric_control_v1_task_proto_init() }
func file_sentiric_control_v1_task_proto_init() {
	if File_sentiric_control_v1_task_proto != nil {
		return
	}
	file_sentiric_control_v1_task_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_control_v1_task_proto_rawDesc), len(file_sentiric_control_v1_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_control_v1_task_proto_goTypes,
		DependencyIndexes: file_sentiric_control_v1_task_proto_depIdxs,
		MessageInfos:      file_sentiric_control_v1_task_proto_msgTypes,
	}.Build()
	File_sentiric_control_v1_task_proto = out.File
	file_sentiric_control_v1_task_proto_goTypes = nil
	file_sentiric_control_v1_task_proto_depIdxs = nil
}
