// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: sentiric/event/v1/event.proto

package eventv1

import (
	v1 "github.com/sentiric/sentiric-contracts/gen/go/sentiric/dialplan/v1"
	v11 "github.com/sentiric/sentiric-contracts/gen/go/sentiric/user/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// call.started olayının standart yapısı.
type CallStartedEvent struct {
	state              protoimpl.MessageState      `protogen:"open.v1"`
	EventType          string                      `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	TraceId            string                      `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	CallId             string                      `protobuf:"bytes,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	FromUri            string                      `protobuf:"bytes,4,opt,name=from_uri,json=fromUri,proto3" json:"from_uri,omitempty"`
	ToUri              string                      `protobuf:"bytes,5,opt,name=to_uri,json=toUri,proto3" json:"to_uri,omitempty"`
	Timestamp          *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DialplanResolution *v1.ResolveDialplanResponse `protobuf:"bytes,7,opt,name=dialplan_resolution,json=dialplanResolution,proto3" json:"dialplan_resolution,omitempty"`
	MediaInfo          map[string]string           `protobuf:"bytes,8,rep,name=media_info,json=mediaInfo,proto3" json:"media_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CallStartedEvent) Reset() {
	*x = CallStartedEvent{}
	mi := &file_sentiric_event_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallStartedEvent) ProtoMessage() {}

func (x *CallStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_event_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallStartedEvent.ProtoReflect.Descriptor instead.
func (*CallStartedEvent) Descriptor() ([]byte, []int) {
	return file_sentiric_event_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *CallStartedEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *CallStartedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *CallStartedEvent) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *CallStartedEvent) GetFromUri() string {
	if x != nil {
		return x.FromUri
	}
	return ""
}

func (x *CallStartedEvent) GetToUri() string {
	if x != nil {
		return x.ToUri
	}
	return ""
}

func (x *CallStartedEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CallStartedEvent) GetDialplanResolution() *v1.ResolveDialplanResponse {
	if x != nil {
		return x.DialplanResolution
	}
	return nil
}

func (x *CallStartedEvent) GetMediaInfo() map[string]string {
	if x != nil {
		return x.MediaInfo
	}
	return nil
}

// user.created.for_call veya user.identified.for_call olayının standart yapısı.
type UserIdentifiedForCallEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	TraceId       string                 `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	CallId        string                 `protobuf:"bytes,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	User          *v11.User              `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Contact       *v11.Contact           `protobuf:"bytes,6,opt,name=contact,proto3" json:"contact,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserIdentifiedForCallEvent) Reset() {
	*x = UserIdentifiedForCallEvent{}
	mi := &file_sentiric_event_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserIdentifiedForCallEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdentifiedForCallEvent) ProtoMessage() {}

func (x *UserIdentifiedForCallEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_event_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdentifiedForCallEvent.ProtoReflect.Descriptor instead.
func (*UserIdentifiedForCallEvent) Descriptor() ([]byte, []int) {
	return file_sentiric_event_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *UserIdentifiedForCallEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *UserIdentifiedForCallEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UserIdentifiedForCallEvent) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *UserIdentifiedForCallEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UserIdentifiedForCallEvent) GetUser() *v11.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserIdentifiedForCallEvent) GetContact() *v11.Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

// call.recording.available olayının standart yapısı.
type CallRecordingAvailableEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	TraceId       string                 `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	CallId        string                 `protobuf:"bytes,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RecordingUri  string                 `protobuf:"bytes,5,opt,name=recording_uri,json=recordingUri,proto3" json:"recording_uri,omitempty"` // s3://...
	PublicUrl     string                 `protobuf:"bytes,6,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`          // https://...
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallRecordingAvailableEvent) Reset() {
	*x = CallRecordingAvailableEvent{}
	mi := &file_sentiric_event_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallRecordingAvailableEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRecordingAvailableEvent) ProtoMessage() {}

func (x *CallRecordingAvailableEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_event_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRecordingAvailableEvent.ProtoReflect.Descriptor instead.
func (*CallRecordingAvailableEvent) Descriptor() ([]byte, []int) {
	return file_sentiric_event_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *CallRecordingAvailableEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *CallRecordingAvailableEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *CallRecordingAvailableEvent) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *CallRecordingAvailableEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CallRecordingAvailableEvent) GetRecordingUri() string {
	if x != nil {
		return x.RecordingUri
	}
	return ""
}

func (x *CallRecordingAvailableEvent) GetPublicUrl() string {
	if x != nil {
		return x.PublicUrl
	}
	return ""
}

// call.ended olayının standart yapısı.
type CallEndedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	TraceId       string                 `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	CallId        string                 `protobuf:"bytes,3,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"` // Örn: "normal_clearing", "terminated_by_request"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallEndedEvent) Reset() {
	*x = CallEndedEvent{}
	mi := &file_sentiric_event_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallEndedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallEndedEvent) ProtoMessage() {}

func (x *CallEndedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_event_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallEndedEvent.ProtoReflect.Descriptor instead.
func (*CallEndedEvent) Descriptor() ([]byte, []int) {
	return file_sentiric_event_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *CallEndedEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *CallEndedEvent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *CallEndedEvent) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *CallEndedEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CallEndedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_sentiric_event_v1_event_proto protoreflect.FileDescriptor

const file_sentiric_event_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x1dsentiric/event/v1/event.proto\x12\x11sentiric.event.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#sentiric/dialplan/v1/dialplan.proto\x1a\x1bsentiric/user/v1/user.proto\"\xc2\x03\n" +
	"\x10CallStartedEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x19\n" +
	"\btrace_id\x18\x02 \x01(\tR\atraceId\x12\x17\n" +
	"\acall_id\x18\x03 \x01(\tR\x06callId\x12\x19\n" +
	"\bfrom_uri\x18\x04 \x01(\tR\afromUri\x12\x15\n" +
	"\x06to_uri\x18\x05 \x01(\tR\x05toUri\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12^\n" +
	"\x13dialplan_resolution\x18\a \x01(\v2-.sentiric.dialplan.v1.ResolveDialplanResponseR\x12dialplanResolution\x12Q\n" +
	"\n" +
	"media_info\x18\b \x03(\v22.sentiric.event.v1.CallStartedEvent.MediaInfoEntryR\tmediaInfo\x1a<\n" +
	"\x0eMediaInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8a\x02\n" +
	"\x1aUserIdentifiedForCallEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x19\n" +
	"\btrace_id\x18\x02 \x01(\tR\atraceId\x12\x17\n" +
	"\acall_id\x18\x03 \x01(\tR\x06callId\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12*\n" +
	"\x04user\x18\x05 \x01(\v2\x16.sentiric.user.v1.UserR\x04user\x123\n" +
	"\acontact\x18\x06 \x01(\v2\x19.sentiric.user.v1.ContactR\acontact\"\xee\x01\n" +
	"\x1bCallRecordingAvailableEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x19\n" +
	"\btrace_id\x18\x02 \x01(\tR\atraceId\x12\x17\n" +
	"\acall_id\x18\x03 \x01(\tR\x06callId\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12#\n" +
	"\rrecording_uri\x18\x05 \x01(\tR\frecordingUri\x12\x1d\n" +
	"\n" +
	"public_url\x18\x06 \x01(\tR\tpublicUrl\"\xb5\x01\n" +
	"\x0eCallEndedEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x19\n" +
	"\btrace_id\x18\x02 \x01(\tR\atraceId\x12\x17\n" +
	"\acall_id\x18\x03 \x01(\tR\x06callId\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reasonBIZGgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/event/v1;eventv1b\x06proto3"

var (
	file_sentiric_event_v1_event_proto_rawDescOnce sync.Once
	file_sentiric_event_v1_event_proto_rawDescData []byte
)

func file_sentiric_event_v1_event_proto_rawDescGZIP() []byte {
	file_sentiric_event_v1_event_proto_rawDescOnce.Do(func() {
		file_sentiric_event_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_event_v1_event_proto_rawDesc), len(file_sentiric_event_v1_event_proto_rawDesc)))
	})
	return file_sentiric_event_v1_event_proto_rawDescData
}

var file_sentiric_event_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sentiric_event_v1_event_proto_goTypes = []any{
	(*CallStartedEvent)(nil),            // 0: sentiric.event.v1.CallStartedEvent
	(*UserIdentifiedForCallEvent)(nil),  // 1: sentiric.event.v1.UserIdentifiedForCallEvent
	(*CallRecordingAvailableEvent)(nil), // 2: sentiric.event.v1.CallRecordingAvailableEvent
	(*CallEndedEvent)(nil),              // 3: sentiric.event.v1.CallEndedEvent
	nil,                                 // 4: sentiric.event.v1.CallStartedEvent.MediaInfoEntry
	(*timestamppb.Timestamp)(nil),       // 5: google.protobuf.Timestamp
	(*v1.ResolveDialplanResponse)(nil),  // 6: sentiric.dialplan.v1.ResolveDialplanResponse
	(*v11.User)(nil),                    // 7: sentiric.user.v1.User
	(*v11.Contact)(nil),                 // 8: sentiric.user.v1.Contact
}
var file_sentiric_event_v1_event_proto_depIdxs = []int32{
	5, // 0: sentiric.event.v1.CallStartedEvent.timestamp:type_name -> google.protobuf.Timestamp
	6, // 1: sentiric.event.v1.CallStartedEvent.dialplan_resolution:type_name -> sentiric.dialplan.v1.ResolveDialplanResponse
	4, // 2: sentiric.event.v1.CallStartedEvent.media_info:type_name -> sentiric.event.v1.CallStartedEvent.MediaInfoEntry
	5, // 3: sentiric.event.v1.UserIdentifiedForCallEvent.timestamp:type_name -> google.protobuf.Timestamp
	7, // 4: sentiric.event.v1.UserIdentifiedForCallEvent.user:type_name -> sentiric.user.v1.User
	8, // 5: sentiric.event.v1.UserIdentifiedForCallEvent.contact:type_name -> sentiric.user.v1.Contact
	5, // 6: sentiric.event.v1.CallRecordingAvailableEvent.timestamp:type_name -> google.protobuf.Timestamp
	5, // 7: sentiric.event.v1.CallEndedEvent.timestamp:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_sentiric_event_v1_event_proto_init() }
func file_sentiric_event_v1_event_proto_init() {
	if File_sentiric_event_v1_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_event_v1_event_proto_rawDesc), len(file_sentiric_event_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sentiric_event_v1_event_proto_goTypes,
		DependencyIndexes: file_sentiric_event_v1_event_proto_depIdxs,
		MessageInfos:      file_sentiric_event_v1_event_proto_msgTypes,
	}.Build()
	File_sentiric_event_v1_event_proto = out.File
	file_sentiric_event_v1_event_proto_goTypes = nil
	file_sentiric_event_v1_event_proto_depIdxs = nil
}
