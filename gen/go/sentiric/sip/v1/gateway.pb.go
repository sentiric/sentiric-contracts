// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: sentiric/sip/v1/gateway.proto

package sipv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLoadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLoadRequest) Reset() {
	*x = GetLoadRequest{}
	mi := &file_sentiric_sip_v1_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoadRequest) ProtoMessage() {}

func (x *GetLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_sip_v1_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoadRequest.ProtoReflect.Descriptor instead.
func (*GetLoadRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_sip_v1_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *GetLoadRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetLoadResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CurrentCpuLoad float64                `protobuf:"fixed64,1,opt,name=current_cpu_load,json=currentCpuLoad,proto3" json:"current_cpu_load,omitempty"`
	ActiveCalls    int32                  `protobuf:"varint,2,opt,name=active_calls,json=activeCalls,proto3" json:"active_calls,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetLoadResponse) Reset() {
	*x = GetLoadResponse{}
	mi := &file_sentiric_sip_v1_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoadResponse) ProtoMessage() {}

func (x *GetLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_sip_v1_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoadResponse.ProtoReflect.Descriptor instead.
func (*GetLoadResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_sip_v1_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *GetLoadResponse) GetCurrentCpuLoad() float64 {
	if x != nil {
		return x.CurrentCpuLoad
	}
	return 0
}

func (x *GetLoadResponse) GetActiveCalls() int32 {
	if x != nil {
		return x.ActiveCalls
	}
	return 0
}

var File_sentiric_sip_v1_gateway_proto protoreflect.FileDescriptor

const file_sentiric_sip_v1_gateway_proto_rawDesc = "" +
	"\n" +
	"\x1dsentiric/sip/v1/gateway.proto\x12\x0fsentiric.sip.v1\"(\n" +
	"\x0eGetLoadRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\"^\n" +
	"\x0fGetLoadResponse\x12(\n" +
	"\x10current_cpu_load\x18\x01 \x01(\x01R\x0ecurrentCpuLoad\x12!\n" +
	"\factive_calls\x18\x02 \x01(\x05R\vactiveCalls2a\n" +
	"\x11SipGatewayService\x12L\n" +
	"\aGetLoad\x12\x1f.sentiric.sip.v1.GetLoadRequest\x1a .sentiric.sip.v1.GetLoadResponseBEZCgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/sip/v1;sipv1b\x06proto3"

var (
	file_sentiric_sip_v1_gateway_proto_rawDescOnce sync.Once
	file_sentiric_sip_v1_gateway_proto_rawDescData []byte
)

func file_sentiric_sip_v1_gateway_proto_rawDescGZIP() []byte {
	file_sentiric_sip_v1_gateway_proto_rawDescOnce.Do(func() {
		file_sentiric_sip_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_sip_v1_gateway_proto_rawDesc), len(file_sentiric_sip_v1_gateway_proto_rawDesc)))
	})
	return file_sentiric_sip_v1_gateway_proto_rawDescData
}

var file_sentiric_sip_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sentiric_sip_v1_gateway_proto_goTypes = []any{
	(*GetLoadRequest)(nil),  // 0: sentiric.sip.v1.GetLoadRequest
	(*GetLoadResponse)(nil), // 1: sentiric.sip.v1.GetLoadResponse
}
var file_sentiric_sip_v1_gateway_proto_depIdxs = []int32{
	0, // 0: sentiric.sip.v1.SipGatewayService.GetLoad:input_type -> sentiric.sip.v1.GetLoadRequest
	1, // 1: sentiric.sip.v1.SipGatewayService.GetLoad:output_type -> sentiric.sip.v1.GetLoadResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sentiric_sip_v1_gateway_proto_init() }
func file_sentiric_sip_v1_gateway_proto_init() {
	if File_sentiric_sip_v1_gateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_sip_v1_gateway_proto_rawDesc), len(file_sentiric_sip_v1_gateway_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_sip_v1_gateway_proto_goTypes,
		DependencyIndexes: file_sentiric_sip_v1_gateway_proto_depIdxs,
		MessageInfos:      file_sentiric_sip_v1_gateway_proto_msgTypes,
	}.Build()
	File_sentiric_sip_v1_gateway_proto = out.File
	file_sentiric_sip_v1_gateway_proto_goTypes = nil
	file_sentiric_sip_v1_gateway_proto_depIdxs = nil
}
