// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: sentiric/knowledge/v1/indexing.proto

package knowledgev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TriggerReindexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Source        *string                `protobuf:"bytes,2,opt,name=source,proto3,oneof" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerReindexRequest) Reset() {
	*x = TriggerReindexRequest{}
	mi := &file_sentiric_knowledge_v1_indexing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerReindexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerReindexRequest) ProtoMessage() {}

func (x *TriggerReindexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_knowledge_v1_indexing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerReindexRequest.ProtoReflect.Descriptor instead.
func (*TriggerReindexRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_knowledge_v1_indexing_proto_rawDescGZIP(), []int{0}
}

func (x *TriggerReindexRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TriggerReindexRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type TriggerReindexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerReindexResponse) Reset() {
	*x = TriggerReindexResponse{}
	mi := &file_sentiric_knowledge_v1_indexing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerReindexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerReindexResponse) ProtoMessage() {}

func (x *TriggerReindexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_knowledge_v1_indexing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerReindexResponse.ProtoReflect.Descriptor instead.
func (*TriggerReindexResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_knowledge_v1_indexing_proto_rawDescGZIP(), []int{1}
}

func (x *TriggerReindexResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TriggerReindexResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

var File_sentiric_knowledge_v1_indexing_proto protoreflect.FileDescriptor

const file_sentiric_knowledge_v1_indexing_proto_rawDesc = "" +
	"\n" +
	"$sentiric/knowledge/v1/indexing.proto\x12\x15sentiric.knowledge.v1\"\\\n" +
	"\x15TriggerReindexRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1b\n" +
	"\x06source\x18\x02 \x01(\tH\x00R\x06source\x88\x01\x01B\t\n" +
	"\a_source\"I\n" +
	"\x16TriggerReindexResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId2\x89\x01\n" +
	"\x18KnowledgeIndexingService\x12m\n" +
	"\x0eTriggerReindex\x12,.sentiric.knowledge.v1.TriggerReindexRequest\x1a-.sentiric.knowledge.v1.TriggerReindexResponseBQZOgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/knowledge/v1;knowledgev1b\x06proto3"

var (
	file_sentiric_knowledge_v1_indexing_proto_rawDescOnce sync.Once
	file_sentiric_knowledge_v1_indexing_proto_rawDescData []byte
)

func file_sentiric_knowledge_v1_indexing_proto_rawDescGZIP() []byte {
	file_sentiric_knowledge_v1_indexing_proto_rawDescOnce.Do(func() {
		file_sentiric_knowledge_v1_indexing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_knowledge_v1_indexing_proto_rawDesc), len(file_sentiric_knowledge_v1_indexing_proto_rawDesc)))
	})
	return file_sentiric_knowledge_v1_indexing_proto_rawDescData
}

var file_sentiric_knowledge_v1_indexing_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sentiric_knowledge_v1_indexing_proto_goTypes = []any{
	(*TriggerReindexRequest)(nil),  // 0: sentiric.knowledge.v1.TriggerReindexRequest
	(*TriggerReindexResponse)(nil), // 1: sentiric.knowledge.v1.TriggerReindexResponse
}
var file_sentiric_knowledge_v1_indexing_proto_depIdxs = []int32{
	0, // 0: sentiric.knowledge.v1.KnowledgeIndexingService.TriggerReindex:input_type -> sentiric.knowledge.v1.TriggerReindexRequest
	1, // 1: sentiric.knowledge.v1.KnowledgeIndexingService.TriggerReindex:output_type -> sentiric.knowledge.v1.TriggerReindexResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sentiric_knowledge_v1_indexing_proto_init() }
func file_sentiric_knowledge_v1_indexing_proto_init() {
	if File_sentiric_knowledge_v1_indexing_proto != nil {
		return
	}
	file_sentiric_knowledge_v1_indexing_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_knowledge_v1_indexing_proto_rawDesc), len(file_sentiric_knowledge_v1_indexing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_knowledge_v1_indexing_proto_goTypes,
		DependencyIndexes: file_sentiric_knowledge_v1_indexing_proto_depIdxs,
		MessageInfos:      file_sentiric_knowledge_v1_indexing_proto_msgTypes,
	}.Build()
	File_sentiric_knowledge_v1_indexing_proto = out.File
	file_sentiric_knowledge_v1_indexing_proto_goTypes = nil
	file_sentiric_knowledge_v1_indexing_proto_depIdxs = nil
}
