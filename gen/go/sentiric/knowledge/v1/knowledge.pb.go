// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: sentiric/knowledge/v1/knowledge.proto

package knowledgev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryRequest, bir bilgi tabanı sorgusunun parametrelerini içerir.
type QueryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Sorgunun ait olduğu tenant'ın kimliği.
	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Kullanıcının veya sistemin aradığı metin sorgusu.
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Döndürülecek en iyi sonuçların sayısı.
	TopK          int32 `protobuf:"varint,3,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_sentiric_knowledge_v1_knowledge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_knowledge_v1_knowledge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_knowledge_v1_knowledge_proto_rawDescGZIP(), []int{0}
}

func (x *QueryRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *QueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryRequest) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

// QueryResponse, bir sorgunun sonuçlarını içerir.
type QueryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Sorguyla en alakalı bulunan sonuçların listesi.
	Results       []*QueryResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_sentiric_knowledge_v1_knowledge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_knowledge_v1_knowledge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_knowledge_v1_knowledge_proto_rawDescGZIP(), []int{1}
}

func (x *QueryResponse) GetResults() []*QueryResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// QueryResult, bilgi tabanından dönen tek bir sonucu temsil eder.
type QueryResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Bulunan metin parçasının içeriği.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// Sonucun sorguyla olan alaka düzeyi skoru (örn: 0.0 ile 1.0 arası).
	Score float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	// Bilginin kaynağını belirten bir tanımlayıcı (örn: "FAQ.pdf", "product_docs/page-15").
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Kaynakla ilgili ek meta veriler (örn: "category": "billing").
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	mi := &file_sentiric_knowledge_v1_knowledge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_knowledge_v1_knowledge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_sentiric_knowledge_v1_knowledge_proto_rawDescGZIP(), []int{2}
}

func (x *QueryResult) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QueryResult) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *QueryResult) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *QueryResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_sentiric_knowledge_v1_knowledge_proto protoreflect.FileDescriptor

const file_sentiric_knowledge_v1_knowledge_proto_rawDesc = "" +
	"\n" +
	"%sentiric/knowledge/v1/knowledge.proto\x12\x15sentiric.knowledge.v1\"V\n" +
	"\fQueryRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x13\n" +
	"\x05top_k\x18\x03 \x01(\x05R\x04topK\"M\n" +
	"\rQueryResponse\x12<\n" +
	"\aresults\x18\x01 \x03(\v2\".sentiric.knowledge.v1.QueryResultR\aresults\"\xe0\x01\n" +
	"\vQueryResult\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x02R\x05score\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12L\n" +
	"\bmetadata\x18\x04 \x03(\v20.sentiric.knowledge.v1.QueryResult.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012f\n" +
	"\x10KnowledgeService\x12R\n" +
	"\x05Query\x12#.sentiric.knowledge.v1.QueryRequest\x1a$.sentiric.knowledge.v1.QueryResponseBQZOgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/knowledge/v1;knowledgev1b\x06proto3"

var (
	file_sentiric_knowledge_v1_knowledge_proto_rawDescOnce sync.Once
	file_sentiric_knowledge_v1_knowledge_proto_rawDescData []byte
)

func file_sentiric_knowledge_v1_knowledge_proto_rawDescGZIP() []byte {
	file_sentiric_knowledge_v1_knowledge_proto_rawDescOnce.Do(func() {
		file_sentiric_knowledge_v1_knowledge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_knowledge_v1_knowledge_proto_rawDesc), len(file_sentiric_knowledge_v1_knowledge_proto_rawDesc)))
	})
	return file_sentiric_knowledge_v1_knowledge_proto_rawDescData
}

var file_sentiric_knowledge_v1_knowledge_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sentiric_knowledge_v1_knowledge_proto_goTypes = []any{
	(*QueryRequest)(nil),  // 0: sentiric.knowledge.v1.QueryRequest
	(*QueryResponse)(nil), // 1: sentiric.knowledge.v1.QueryResponse
	(*QueryResult)(nil),   // 2: sentiric.knowledge.v1.QueryResult
	nil,                   // 3: sentiric.knowledge.v1.QueryResult.MetadataEntry
}
var file_sentiric_knowledge_v1_knowledge_proto_depIdxs = []int32{
	2, // 0: sentiric.knowledge.v1.QueryResponse.results:type_name -> sentiric.knowledge.v1.QueryResult
	3, // 1: sentiric.knowledge.v1.QueryResult.metadata:type_name -> sentiric.knowledge.v1.QueryResult.MetadataEntry
	0, // 2: sentiric.knowledge.v1.KnowledgeService.Query:input_type -> sentiric.knowledge.v1.QueryRequest
	1, // 3: sentiric.knowledge.v1.KnowledgeService.Query:output_type -> sentiric.knowledge.v1.QueryResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sentiric_knowledge_v1_knowledge_proto_init() }
func file_sentiric_knowledge_v1_knowledge_proto_init() {
	if File_sentiric_knowledge_v1_knowledge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_knowledge_v1_knowledge_proto_rawDesc), len(file_sentiric_knowledge_v1_knowledge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_knowledge_v1_knowledge_proto_goTypes,
		DependencyIndexes: file_sentiric_knowledge_v1_knowledge_proto_depIdxs,
		MessageInfos:      file_sentiric_knowledge_v1_knowledge_proto_msgTypes,
	}.Build()
	File_sentiric_knowledge_v1_knowledge_proto = out.File
	file_sentiric_knowledge_v1_knowledge_proto_goTypes = nil
	file_sentiric_knowledge_v1_knowledge_proto_depIdxs = nil
}
