// proto/sentiric/dialplan/v1/dialplan.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: sentiric/dialplan/v1/dialplan.proto

package dialplanv1

import (
	v1 "github.com/sentiric/sentiric-contracts/gen/go/sentiric/user/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDialplanForUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDialplanForUserRequest) Reset() {
	*x = GetDialplanForUserRequest{}
	mi := &file_sentiric_dialplan_v1_dialplan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDialplanForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialplanForUserRequest) ProtoMessage() {}

func (x *GetDialplanForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_dialplan_v1_dialplan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialplanForUserRequest.ProtoReflect.Descriptor instead.
func (*GetDialplanForUserRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_dialplan_v1_dialplan_proto_rawDescGZIP(), []int{0}
}

func (x *GetDialplanForUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDialplanForUserResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DialplanId string                 `protobuf:"bytes,1,opt,name=dialplan_id,json=dialplanId,proto3" json:"dialplan_id,omitempty"`
	Content    string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// Import edilen User mesajını burada kullanıyoruz.
	Owner         *v1.User `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDialplanForUserResponse) Reset() {
	*x = GetDialplanForUserResponse{}
	mi := &file_sentiric_dialplan_v1_dialplan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDialplanForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDialplanForUserResponse) ProtoMessage() {}

func (x *GetDialplanForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_dialplan_v1_dialplan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDialplanForUserResponse.ProtoReflect.Descriptor instead.
func (*GetDialplanForUserResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_dialplan_v1_dialplan_proto_rawDescGZIP(), []int{1}
}

func (x *GetDialplanForUserResponse) GetDialplanId() string {
	if x != nil {
		return x.DialplanId
	}
	return ""
}

func (x *GetDialplanForUserResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetDialplanForUserResponse) GetOwner() *v1.User {
	if x != nil {
		return x.Owner
	}
	return nil
}

var File_sentiric_dialplan_v1_dialplan_proto protoreflect.FileDescriptor

const file_sentiric_dialplan_v1_dialplan_proto_rawDesc = "" +
	"\n" +
	"#sentiric/dialplan/v1/dialplan.proto\x12\x14sentiric.dialplan.v1\x1a\x1bsentiric/user/v1/user.proto\"4\n" +
	"\x19GetDialplanForUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\x85\x01\n" +
	"\x1aGetDialplanForUserResponse\x12\x1f\n" +
	"\vdialplan_id\x18\x01 \x01(\tR\n" +
	"dialplanId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12,\n" +
	"\x05owner\x18\x03 \x01(\v2\x16.sentiric.user.v1.UserR\x05owner2\x8a\x01\n" +
	"\x0fDialplanService\x12w\n" +
	"\x12GetDialplanForUser\x12/.sentiric.dialplan.v1.GetDialplanForUserRequest\x1a0.sentiric.dialplan.v1.GetDialplanForUserResponseBOZMgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/dialplan/v1;dialplanv1b\x06proto3"

var (
	file_sentiric_dialplan_v1_dialplan_proto_rawDescOnce sync.Once
	file_sentiric_dialplan_v1_dialplan_proto_rawDescData []byte
)

func file_sentiric_dialplan_v1_dialplan_proto_rawDescGZIP() []byte {
	file_sentiric_dialplan_v1_dialplan_proto_rawDescOnce.Do(func() {
		file_sentiric_dialplan_v1_dialplan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_dialplan_v1_dialplan_proto_rawDesc), len(file_sentiric_dialplan_v1_dialplan_proto_rawDesc)))
	})
	return file_sentiric_dialplan_v1_dialplan_proto_rawDescData
}

var file_sentiric_dialplan_v1_dialplan_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sentiric_dialplan_v1_dialplan_proto_goTypes = []any{
	(*GetDialplanForUserRequest)(nil),  // 0: sentiric.dialplan.v1.GetDialplanForUserRequest
	(*GetDialplanForUserResponse)(nil), // 1: sentiric.dialplan.v1.GetDialplanForUserResponse
	(*v1.User)(nil),                    // 2: sentiric.user.v1.User
}
var file_sentiric_dialplan_v1_dialplan_proto_depIdxs = []int32{
	2, // 0: sentiric.dialplan.v1.GetDialplanForUserResponse.owner:type_name -> sentiric.user.v1.User
	0, // 1: sentiric.dialplan.v1.DialplanService.GetDialplanForUser:input_type -> sentiric.dialplan.v1.GetDialplanForUserRequest
	1, // 2: sentiric.dialplan.v1.DialplanService.GetDialplanForUser:output_type -> sentiric.dialplan.v1.GetDialplanForUserResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sentiric_dialplan_v1_dialplan_proto_init() }
func file_sentiric_dialplan_v1_dialplan_proto_init() {
	if File_sentiric_dialplan_v1_dialplan_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_dialplan_v1_dialplan_proto_rawDesc), len(file_sentiric_dialplan_v1_dialplan_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_dialplan_v1_dialplan_proto_goTypes,
		DependencyIndexes: file_sentiric_dialplan_v1_dialplan_proto_depIdxs,
		MessageInfos:      file_sentiric_dialplan_v1_dialplan_proto_msgTypes,
	}.Build()
	File_sentiric_dialplan_v1_dialplan_proto = out.File
	file_sentiric_dialplan_v1_dialplan_proto_goTypes = nil
	file_sentiric_dialplan_v1_dialplan_proto_depIdxs = nil
}
