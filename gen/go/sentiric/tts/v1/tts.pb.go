// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: sentiric/tts/v1/tts.proto

package ttsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SynthesizeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Sentezlenecek metin. SSML de destekleyebilir.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Metnin dili (örn: "tr", "en")
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// Ses klonlama için opsiyonel referans ses dosyası URL'i
	SpeakerWavUrl *string `protobuf:"bytes,3,opt,name=speaker_wav_url,json=speakerWavUrl,proto3,oneof" json:"speaker_wav_url,omitempty"`
	// İstenen ses kalitesi veya sağlayıcı (örn: "fast", "premium", "elevenlabs")
	VoiceSelector *string `protobuf:"bytes,4,opt,name=voice_selector,json=voiceSelector,proto3,oneof" json:"voice_selector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeRequest) Reset() {
	*x = SynthesizeRequest{}
	mi := &file_sentiric_tts_v1_tts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeRequest) ProtoMessage() {}

func (x *SynthesizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_tts_v1_tts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeRequest.ProtoReflect.Descriptor instead.
func (*SynthesizeRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_tts_v1_tts_proto_rawDescGZIP(), []int{0}
}

func (x *SynthesizeRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SynthesizeRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *SynthesizeRequest) GetSpeakerWavUrl() string {
	if x != nil && x.SpeakerWavUrl != nil {
		return *x.SpeakerWavUrl
	}
	return ""
}

func (x *SynthesizeRequest) GetVoiceSelector() string {
	if x != nil && x.VoiceSelector != nil {
		return *x.VoiceSelector
	}
	return ""
}

type SynthesizeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Sentezlenmiş ses verisi, WAV formatında.
	AudioContent []byte `protobuf:"bytes,1,opt,name=audio_content,json=audioContent,proto3" json:"audio_content,omitempty"`
	// Sentezlemenin yapıldığı motorun adı (örn: "coqui-tts", "edge-tts")
	EngineUsed    string `protobuf:"bytes,2,opt,name=engine_used,json=engineUsed,proto3" json:"engine_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeResponse) Reset() {
	*x = SynthesizeResponse{}
	mi := &file_sentiric_tts_v1_tts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeResponse) ProtoMessage() {}

func (x *SynthesizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_tts_v1_tts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeResponse.ProtoReflect.Descriptor instead.
func (*SynthesizeResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_tts_v1_tts_proto_rawDescGZIP(), []int{1}
}

func (x *SynthesizeResponse) GetAudioContent() []byte {
	if x != nil {
		return x.AudioContent
	}
	return nil
}

func (x *SynthesizeResponse) GetEngineUsed() string {
	if x != nil {
		return x.EngineUsed
	}
	return ""
}

var File_sentiric_tts_v1_tts_proto protoreflect.FileDescriptor

const file_sentiric_tts_v1_tts_proto_rawDesc = "" +
	"\n" +
	"\x19sentiric/tts/v1/tts.proto\x12\x0fsentiric.tts.v1\"\xcc\x01\n" +
	"\x11SynthesizeRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12#\n" +
	"\rlanguage_code\x18\x02 \x01(\tR\flanguageCode\x12+\n" +
	"\x0fspeaker_wav_url\x18\x03 \x01(\tH\x00R\rspeakerWavUrl\x88\x01\x01\x12*\n" +
	"\x0evoice_selector\x18\x04 \x01(\tH\x01R\rvoiceSelector\x88\x01\x01B\x12\n" +
	"\x10_speaker_wav_urlB\x11\n" +
	"\x0f_voice_selector\"Z\n" +
	"\x12SynthesizeResponse\x12#\n" +
	"\raudio_content\x18\x01 \x01(\fR\faudioContent\x12\x1f\n" +
	"\vengine_used\x18\x02 \x01(\tR\n" +
	"engineUsed2l\n" +
	"\x13TextToSpeechService\x12U\n" +
	"\n" +
	"Synthesize\x12\".sentiric.tts.v1.SynthesizeRequest\x1a#.sentiric.tts.v1.SynthesizeResponseBEZCgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/tts/v1;ttsv1b\x06proto3"

var (
	file_sentiric_tts_v1_tts_proto_rawDescOnce sync.Once
	file_sentiric_tts_v1_tts_proto_rawDescData []byte
)

func file_sentiric_tts_v1_tts_proto_rawDescGZIP() []byte {
	file_sentiric_tts_v1_tts_proto_rawDescOnce.Do(func() {
		file_sentiric_tts_v1_tts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_tts_v1_tts_proto_rawDesc), len(file_sentiric_tts_v1_tts_proto_rawDesc)))
	})
	return file_sentiric_tts_v1_tts_proto_rawDescData
}

var file_sentiric_tts_v1_tts_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sentiric_tts_v1_tts_proto_goTypes = []any{
	(*SynthesizeRequest)(nil),  // 0: sentiric.tts.v1.SynthesizeRequest
	(*SynthesizeResponse)(nil), // 1: sentiric.tts.v1.SynthesizeResponse
}
var file_sentiric_tts_v1_tts_proto_depIdxs = []int32{
	0, // 0: sentiric.tts.v1.TextToSpeechService.Synthesize:input_type -> sentiric.tts.v1.SynthesizeRequest
	1, // 1: sentiric.tts.v1.TextToSpeechService.Synthesize:output_type -> sentiric.tts.v1.SynthesizeResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sentiric_tts_v1_tts_proto_init() }
func file_sentiric_tts_v1_tts_proto_init() {
	if File_sentiric_tts_v1_tts_proto != nil {
		return
	}
	file_sentiric_tts_v1_tts_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_tts_v1_tts_proto_rawDesc), len(file_sentiric_tts_v1_tts_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_tts_v1_tts_proto_goTypes,
		DependencyIndexes: file_sentiric_tts_v1_tts_proto_depIdxs,
		MessageInfos:      file_sentiric_tts_v1_tts_proto_msgTypes,
	}.Build()
	File_sentiric_tts_v1_tts_proto = out.File
	file_sentiric_tts_v1_tts_proto_goTypes = nil
	file_sentiric_tts_v1_tts_proto_depIdxs = nil
}
