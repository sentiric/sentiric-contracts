# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sentiric.sip.v1 import b2bua_pb2 as sentiric_dot_sip_dot_v1_dot_b2bua__pb2


class B2BUAServiceStub(object):
    """B2BUAService, AI odaklı çağrı başlatma ve transfer mantığını yönetir.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitiateCall = channel.unary_unary(
                '/sentiric.sip.v1.B2BUAService/InitiateCall',
                request_serializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.InitiateCallRequest.SerializeToString,
                response_deserializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.InitiateCallResponse.FromString,
                _registered_method=True)
        self.TransferCall = channel.unary_unary(
                '/sentiric.sip.v1.B2BUAService/TransferCall',
                request_serializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.TransferCallRequest.SerializeToString,
                response_deserializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.TransferCallResponse.FromString,
                _registered_method=True)


class B2BUAServiceServicer(object):
    """B2BUAService, AI odaklı çağrı başlatma ve transfer mantığını yönetir.
    """

    def InitiateCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_B2BUAServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitiateCall': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateCall,
                    request_deserializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.InitiateCallRequest.FromString,
                    response_serializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.InitiateCallResponse.SerializeToString,
            ),
            'TransferCall': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferCall,
                    request_deserializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.TransferCallRequest.FromString,
                    response_serializer=sentiric_dot_sip_dot_v1_dot_b2bua__pb2.TransferCallResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sentiric.sip.v1.B2BUAService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sentiric.sip.v1.B2BUAService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class B2BUAService(object):
    """B2BUAService, AI odaklı çağrı başlatma ve transfer mantığını yönetir.
    """

    @staticmethod
    def InitiateCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sentiric.sip.v1.B2BUAService/InitiateCall',
            sentiric_dot_sip_dot_v1_dot_b2bua__pb2.InitiateCallRequest.SerializeToString,
            sentiric_dot_sip_dot_v1_dot_b2bua__pb2.InitiateCallResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TransferCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sentiric.sip.v1.B2BUAService/TransferCall',
            sentiric_dot_sip_dot_v1_dot_b2bua__pb2.TransferCallRequest.SerializeToString,
            sentiric_dot_sip_dot_v1_dot_b2bua__pb2.TransferCallResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
