# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: sentiric/sip/v1/gateway.proto
# Protobuf Python Version: 6.33.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    33,
    0,
    '',
    'sentiric/sip/v1/gateway.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1dsentiric/sip/v1/gateway.proto\x12\x0fsentiric.sip.v1\"(\n\x0eGetLoadRequest\x12\x16\n\x06region\x18\x01 \x01(\tR\x06region\"^\n\x0fGetLoadResponse\x12(\n\x10\x63urrent_cpu_load\x18\x01 \x01(\x01R\x0e\x63urrentCpuLoad\x12!\n\x0c\x61\x63tive_calls\x18\x02 \x01(\x05R\x0b\x61\x63tiveCalls2a\n\x11SipGatewayService\x12L\n\x07GetLoad\x12\x1f.sentiric.sip.v1.GetLoadRequest\x1a .sentiric.sip.v1.GetLoadResponseBEZCgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/sip/v1;sipv1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'sentiric.sip.v1.gateway_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZCgithub.com/sentiric/sentiric-contracts/gen/go/sentiric/sip/v1;sipv1'
  _globals['_GETLOADREQUEST']._serialized_start=50
  _globals['_GETLOADREQUEST']._serialized_end=90
  _globals['_GETLOADRESPONSE']._serialized_start=92
  _globals['_GETLOADRESPONSE']._serialized_end=186
  _globals['_SIPGATEWAYSERVICE']._serialized_start=188
  _globals['_SIPGATEWAYSERVICE']._serialized_end=285
# @@protoc_insertion_point(module_scope)
