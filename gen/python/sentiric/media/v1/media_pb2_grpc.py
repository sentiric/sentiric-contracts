# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sentiric.media.v1 import media_pb2 as sentiric_dot_media_dot_v1_dot_media__pb2


class MediaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AllocatePort = channel.unary_unary(
                '/sentiric.media.v1.MediaService/AllocatePort',
                request_serializer=sentiric_dot_media_dot_v1_dot_media__pb2.AllocatePortRequest.SerializeToString,
                response_deserializer=sentiric_dot_media_dot_v1_dot_media__pb2.AllocatePortResponse.FromString,
                _registered_method=True)
        self.ReleasePort = channel.unary_unary(
                '/sentiric.media.v1.MediaService/ReleasePort',
                request_serializer=sentiric_dot_media_dot_v1_dot_media__pb2.ReleasePortRequest.SerializeToString,
                response_deserializer=sentiric_dot_media_dot_v1_dot_media__pb2.ReleasePortResponse.FromString,
                _registered_method=True)
        self.PlayAudio = channel.unary_unary(
                '/sentiric.media.v1.MediaService/PlayAudio',
                request_serializer=sentiric_dot_media_dot_v1_dot_media__pb2.PlayAudioRequest.SerializeToString,
                response_deserializer=sentiric_dot_media_dot_v1_dot_media__pb2.PlayAudioResponse.FromString,
                _registered_method=True)


class MediaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AllocatePort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleasePort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlayAudio(self, request, context):
        """Belirtilen hedef adrese bir ses dosyası çalar.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MediaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AllocatePort': grpc.unary_unary_rpc_method_handler(
                    servicer.AllocatePort,
                    request_deserializer=sentiric_dot_media_dot_v1_dot_media__pb2.AllocatePortRequest.FromString,
                    response_serializer=sentiric_dot_media_dot_v1_dot_media__pb2.AllocatePortResponse.SerializeToString,
            ),
            'ReleasePort': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleasePort,
                    request_deserializer=sentiric_dot_media_dot_v1_dot_media__pb2.ReleasePortRequest.FromString,
                    response_serializer=sentiric_dot_media_dot_v1_dot_media__pb2.ReleasePortResponse.SerializeToString,
            ),
            'PlayAudio': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayAudio,
                    request_deserializer=sentiric_dot_media_dot_v1_dot_media__pb2.PlayAudioRequest.FromString,
                    response_serializer=sentiric_dot_media_dot_v1_dot_media__pb2.PlayAudioResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sentiric.media.v1.MediaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sentiric.media.v1.MediaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MediaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AllocatePort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sentiric.media.v1.MediaService/AllocatePort',
            sentiric_dot_media_dot_v1_dot_media__pb2.AllocatePortRequest.SerializeToString,
            sentiric_dot_media_dot_v1_dot_media__pb2.AllocatePortResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReleasePort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sentiric.media.v1.MediaService/ReleasePort',
            sentiric_dot_media_dot_v1_dot_media__pb2.ReleasePortRequest.SerializeToString,
            sentiric_dot_media_dot_v1_dot_media__pb2.ReleasePortResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlayAudio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sentiric.media.v1.MediaService/PlayAudio',
            sentiric_dot_media_dot_v1_dot_media__pb2.PlayAudioRequest.SerializeToString,
            sentiric_dot_media_dot_v1_dot_media__pb2.PlayAudioResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
